# Generated by Django 3.2 on 2022-07-25 10:29

import ckeditor.fields
import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0013_auto_20220724_2245'),
        ('qa_site', '0008_alter_academicquestion_subject'),
    ]

    operations = [
        migrations.CreateModel(
            name='DiscussComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('original_language', models.CharField(choices=[('en', 'English'), ('fr', 'French')], editable=False, max_length=2)),
                ('update_language', models.CharField(blank=True, choices=[('en', 'English'), ('fr', 'French')], editable=False, max_length=2)),
                ('content', ckeditor.fields.RichTextField(verbose_name='Content')),
                ('content_en', ckeditor.fields.RichTextField(null=True, verbose_name='Content')),
                ('content_fr', ckeditor.fields.RichTextField(null=True, verbose_name='Content')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', related_query_name='reply', to='qa_site.discusscomment')),
                ('poster', models.ForeignKey(on_delete=models.SET(users.models.get_dummy_user), related_name='discuss_comments', related_query_name='discuss_comment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Discuss Comment',
                'verbose_name_plural': 'Discuss Comments',
            },
        ),
        migrations.CreateModel(
            name='DiscussQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('original_language', models.CharField(choices=[('en', 'English'), ('fr', 'French')], editable=False, max_length=2)),
                ('update_language', models.CharField(blank=True, choices=[('en', 'English'), ('fr', 'French')], editable=False, max_length=2)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('content_en', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('content_fr', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('bookmarkers', models.ManyToManyField(blank=True, related_name='bookmarked_discuss_questions', related_query_name='bookmarked_discuss_question', to=settings.AUTH_USER_MODEL)),
                ('downvoters', models.ManyToManyField(blank=True, related_name='downvoted_discuss_questions', related_query_name='downvoted_discuss_question', to=settings.AUTH_USER_MODEL)),
                ('followers', models.ManyToManyField(blank=True, related_name='following_discuss_questions', related_query_name='following_discuss_question', to=settings.AUTH_USER_MODEL)),
                ('poster', models.ForeignKey(on_delete=models.SET(users.models.get_dummy_user), related_name='discuss_questions', related_query_name='discuss_question', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', related_query_name='question', to='core.institution')),
                ('upvoters', models.ManyToManyField(blank=True, related_name='upvoted_discuss_questions', related_query_name='upvoted_discuss_question', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Discussion Question',
                'verbose_name_plural': 'Discussion Questions',
                'ordering': ['-posted_datetime'],
            },
        ),
        migrations.CreateModel(
            name='DiscussQuestionTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('datetime_added', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Discussion Question Tag',
                'verbose_name_plural': 'Discussion Question Tags',
            },
        ),
        migrations.CreateModel(
            name='TaggedDiscussQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qa_site.discussquestion')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discuss_questions', to='qa_site.discussquestiontag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='schoolanswercomment',
            name='answer',
        ),
        migrations.RemoveField(
            model_name='schoolanswercomment',
            name='poster',
        ),
        migrations.RemoveField(
            model_name='schoolanswercomment',
            name='upvoters',
        ),
        migrations.RemoveField(
            model_name='schoolanswercomment',
            name='users_mentioned',
        ),
        migrations.RemoveField(
            model_name='schoolquestion',
            name='bookmarkers',
        ),
        migrations.RemoveField(
            model_name='schoolquestion',
            name='downvoters',
        ),
        migrations.RemoveField(
            model_name='schoolquestion',
            name='followers',
        ),
        migrations.RemoveField(
            model_name='schoolquestion',
            name='poster',
        ),
        migrations.RemoveField(
            model_name='schoolquestion',
            name='school',
        ),
        migrations.RemoveField(
            model_name='schoolquestion',
            name='upvoters',
        ),
        migrations.RemoveField(
            model_name='schoolquestioncomment',
            name='poster',
        ),
        migrations.RemoveField(
            model_name='schoolquestioncomment',
            name='question',
        ),
        migrations.RemoveField(
            model_name='schoolquestioncomment',
            name='upvoters',
        ),
        migrations.RemoveField(
            model_name='schoolquestioncomment',
            name='users_mentioned',
        ),
        migrations.AddField(
            model_name='academicanswercomment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', related_query_name='reply', to='qa_site.academicanswercomment'),
        ),
        migrations.AddField(
            model_name='academicquestioncomment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', related_query_name='reply', to='qa_site.academicquestioncomment'),
        ),
        migrations.AddField(
            model_name='academicquestiontag',
            name='datetime_added',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='academicquestiontag',
            name='last_modified',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='academicanswercomment',
            name='users_mentioned',
            field=models.ManyToManyField(blank=True, related_name='academic_answer_comments_mentioned', related_query_name='academic_answer_comment_mentioned', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='academicquestioncomment',
            name='users_mentioned',
            field=models.ManyToManyField(blank=True, related_name='academic_question_comments_mentioned', related_query_name='academic_question_comment_mentioned', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='academicquestiontag',
            name='name',
            field=models.CharField(max_length=50, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='academicquestiontag',
            name='name_en',
            field=models.CharField(max_length=50, null=True, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='academicquestiontag',
            name='name_fr',
            field=models.CharField(max_length=50, null=True, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='subject',
            name='name',
            field=models.CharField(max_length=50, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='subject',
            name='name_en',
            field=models.CharField(max_length=50, null=True, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='subject',
            name='name_fr',
            field=models.CharField(max_length=50, null=True, unique=True, verbose_name='Name'),
        ),
        migrations.DeleteModel(
            name='SchoolAnswer',
        ),
        migrations.DeleteModel(
            name='SchoolAnswerComment',
        ),
        migrations.DeleteModel(
            name='SchoolQuestion',
        ),
        migrations.DeleteModel(
            name='SchoolQuestionComment',
        ),
        migrations.AddField(
            model_name='discusscomment',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', related_query_name='comment', to='qa_site.discussquestion'),
        ),
        migrations.AddField(
            model_name='discusscomment',
            name='upvoters',
            field=models.ManyToManyField(blank=True, related_name='upvoted_discuss_comments', related_query_name='upvoted_discuss_comment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='discussquestion',
            index=models.Index(fields=['-posted_datetime'], name='qa_site_dis_posted__8be5de_idx'),
        ),
    ]
