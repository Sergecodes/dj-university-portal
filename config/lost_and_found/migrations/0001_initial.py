# Generated by Django 3.1.3 on 2021-10-17 22:43

import core.model_fields
import core.storage_backends
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FoundItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('slug', models.SlugField(max_length=255)),
                ('slug_en', models.SlugField(max_length=255, null=True)),
                ('slug_fr', models.SlugField(max_length=255, null=True)),
                ('posted_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('original_language', models.CharField(choices=[('en', 'English'), ('fr', 'French')], editable=False, help_text='Language in which post was created', max_length=2)),
                ('update_language', models.CharField(blank=True, choices=[('en', 'English'), ('fr', 'French')], editable=False, help_text='Language in which last update was done', max_length=2)),
                ('contact_email', core.model_fields.NormalizedEmailField(help_text='Email address to contact; enter a valid email.', max_length=50, validators=[django.core.validators.EmailValidator()], verbose_name='Email address')),
                ('item_found', models.CharField(help_text='What have you found?', max_length=100, verbose_name='Item found')),
                ('item_found_en', models.CharField(help_text='What have you found?', max_length=100, null=True, verbose_name='Item found')),
                ('item_found_fr', models.CharField(help_text='What have you found?', max_length=100, null=True, verbose_name='Item found')),
                ('area_found', models.CharField(help_text='Where did you find the item?', max_length=250, verbose_name='Area found')),
                ('area_found_en', models.CharField(help_text='Where did you find the item?', max_length=250, null=True, verbose_name='Area found')),
                ('area_found_fr', models.CharField(help_text='Where did you find the item?', max_length=250, null=True, verbose_name='Area found')),
                ('how_found', models.TextField(help_text='Explain how you found the item', verbose_name='How found')),
                ('how_found_en', models.TextField(help_text='Explain how you found the item', null=True, verbose_name='How found')),
                ('how_found_fr', models.TextField(help_text='Explain how you found the item', null=True, verbose_name='How found')),
            ],
            options={
                'ordering': ['-posted_datetime'],
            },
        ),
        migrations.CreateModel(
            name='LostItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('slug', models.SlugField(max_length=255)),
                ('slug_en', models.SlugField(max_length=255, null=True)),
                ('slug_fr', models.SlugField(max_length=255, null=True)),
                ('posted_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('original_language', models.CharField(choices=[('en', 'English'), ('fr', 'French')], editable=False, help_text='Language in which post was created', max_length=2)),
                ('update_language', models.CharField(blank=True, choices=[('en', 'English'), ('fr', 'French')], editable=False, help_text='Language in which last update was done', max_length=2)),
                ('contact_email', core.model_fields.NormalizedEmailField(help_text='Email address to contact; enter a valid email.', max_length=50, validators=[django.core.validators.EmailValidator()], verbose_name='Email address')),
                ('item_lost', models.CharField(help_text='What have you lost?', max_length=100, verbose_name='Item lost')),
                ('item_lost_en', models.CharField(help_text='What have you lost?', max_length=100, null=True, verbose_name='Item lost')),
                ('item_lost_fr', models.CharField(help_text='What have you lost?', max_length=100, null=True, verbose_name='Item lost')),
                ('item_description', models.TextField(help_text='Describe the lost item stating its important aspects.', verbose_name='Item description')),
                ('item_description_en', models.TextField(help_text='Describe the lost item stating its important aspects.', null=True, verbose_name='Item description')),
                ('item_description_fr', models.TextField(help_text='Describe the lost item stating its important aspects.', null=True, verbose_name='Item description')),
                ('area_lost', models.CharField(help_text='Where do you think you lost the item?', max_length=250, verbose_name='Area lost')),
                ('area_lost_en', models.CharField(help_text='Where do you think you lost the item?', max_length=250, null=True, verbose_name='Area lost')),
                ('area_lost_fr', models.CharField(help_text='Where do you think you lost the item?', max_length=250, null=True, verbose_name='Area lost')),
                ('how_lost', models.TextField(default='Good day, ', help_text='Explain how you think you lost the item, stating areas you passed across or visited', verbose_name='How lost')),
                ('how_lost_en', models.TextField(default='Good day, ', help_text='Explain how you think you lost the item, stating areas you passed across or visited', null=True, verbose_name='How lost')),
                ('how_lost_fr', models.TextField(default='Good day, ', help_text='Explain how you think you lost the item, stating areas you passed across or visited', null=True, verbose_name='How lost')),
                ('bounty', models.CharField(blank=True, help_text='Award/bounty given to the person who will return the item. Make sure that you are in possession of the award. <br> This is optional but can be used as motivation.', max_length=100, null=True, verbose_name='Bounty')),
                ('bounty_en', models.CharField(blank=True, help_text='Award/bounty given to the person who will return the item. Make sure that you are in possession of the award. <br> This is optional but can be used as motivation.', max_length=100, null=True, verbose_name='Bounty')),
                ('bounty_fr', models.CharField(blank=True, help_text='Award/bounty given to the person who will return the item. Make sure that you are in possession of the award. <br> This is optional but can be used as motivation.', max_length=100, null=True, verbose_name='Bounty')),
            ],
            options={
                'ordering': ['-posted_datetime'],
            },
        ),
        migrations.CreateModel(
            name='LostItemPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(storage=core.storage_backends.PublicMediaStorage(), upload_to='lost_items_photos/')),
                ('upload_datetime', models.DateTimeField(auto_now_add=True)),
                ('lost_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', related_query_name='photo', to='lost_and_found.lostitem')),
            ],
            options={
                'verbose_name': 'Lost Item Photo',
                'verbose_name_plural': 'Lost Items Photos',
            },
        ),
    ]
