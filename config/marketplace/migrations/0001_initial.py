# Generated by Django 3.1.3 on 2021-08-20 09:41

import ckeditor.fields
import core.model_fields
import datetime
from django.db import migrations, models
import django.db.models.deletion
import hitcount.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35, verbose_name='Name')),
                ('name_en', models.CharField(max_length=35, null=True, verbose_name='Name')),
                ('name_fr', models.CharField(max_length=35, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'Ad Categories',
            },
        ),
        migrations.CreateModel(
            name='AdListing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.DurationField(choices=[(datetime.timedelta(days=3), '3 days'), (datetime.timedelta(days=5), '5 days'), (datetime.timedelta(days=7), '1 week'), (datetime.timedelta(days=10), '10 days'), (datetime.timedelta(days=28), '1 month')], default=datetime.timedelta(days=5), help_text='For how long should your post be available')),
                ('contact_email', core.model_fields.NormalizedEmailField(help_text='Email address to use for notifications', max_length=50, verbose_name='Email address')),
                ('contact_name', core.model_fields.FullNameField(help_text='Enter real names, buyers will more easily trust you if you enter a real name.', max_length=25, verbose_name='Full name')),
                ('title', models.CharField(help_text='A descriptive title helps buyers find your item. <br> State exactly what your post is.', max_length=80, verbose_name='Title')),
                ('title_en', models.CharField(help_text='A descriptive title helps buyers find your item. <br> State exactly what your post is.', max_length=80, null=True, verbose_name='Title')),
                ('title_fr', models.CharField(help_text='A descriptive title helps buyers find your item. <br> State exactly what your post is.', max_length=80, null=True, verbose_name='Title')),
                ('slug', models.SlugField(max_length=255)),
                ('slug_en', models.SlugField(max_length=255, null=True)),
                ('slug_fr', models.SlugField(max_length=255, null=True)),
                ('description', ckeditor.fields.RichTextField(help_text='Describe the your post and provide complete and accurate details. Use a clear and concise format.', verbose_name='Description')),
                ('description_en', ckeditor.fields.RichTextField(help_text='Describe the your post and provide complete and accurate details. Use a clear and concise format.', null=True, verbose_name='Description')),
                ('description_fr', ckeditor.fields.RichTextField(help_text='Describe the your post and provide complete and accurate details. Use a clear and concise format.', null=True, verbose_name='Description')),
                ('datetime_added', models.DateTimeField(auto_now_add=True, verbose_name='Date/time added')),
                ('original_language', models.CharField(choices=[('en', 'English'), ('fr', 'French')], default='fr', help_text='Initial language in which post was entered in.', max_length=3, verbose_name='Initial language')),
                ('price', models.PositiveIntegerField(default=0, help_text='Figures and spaces only, no commas or dots. <br> Enter <b>-</b> for free products or services, or if the price is in the advert description.', verbose_name='Price')),
            ],
            bases=(models.Model, hitcount.models.HitCountMixin),
        ),
        migrations.CreateModel(
            name='AdListingPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='ad_photos/')),
            ],
            options={
                'verbose_name_plural': 'Ad Listing Photos',
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=50, null=True, unique=True, verbose_name='Name')),
                ('name_fr', models.CharField(max_length=50, null=True, unique=True, verbose_name='Name')),
                ('location', models.CharField(help_text='Street or quarter where institution is located', max_length=40, verbose_name='Location')),
                ('datetime_added', models.DateTimeField(auto_now_add=True, verbose_name='Date/time added')),
            ],
        ),
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('name_en', models.CharField(max_length=30, null=True, verbose_name='Name')),
                ('name_fr', models.CharField(max_length=30, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'Item Categories',
            },
        ),
        migrations.CreateModel(
            name='ItemListing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.DurationField(choices=[(datetime.timedelta(days=3), '3 days'), (datetime.timedelta(days=5), '5 days'), (datetime.timedelta(days=7), '1 week'), (datetime.timedelta(days=10), '10 days'), (datetime.timedelta(days=28), '1 month')], default=datetime.timedelta(days=5), help_text='For how long should your post be available')),
                ('contact_email', core.model_fields.NormalizedEmailField(help_text='Email address to use for notifications', max_length=50, verbose_name='Email address')),
                ('contact_name', core.model_fields.FullNameField(help_text='Enter real names, buyers will more easily trust you if you enter a real name.', max_length=25, verbose_name='Full name')),
                ('title', models.CharField(help_text='A descriptive title helps buyers find your item. <br> State exactly what your post is.', max_length=80, verbose_name='Title')),
                ('title_en', models.CharField(help_text='A descriptive title helps buyers find your item. <br> State exactly what your post is.', max_length=80, null=True, verbose_name='Title')),
                ('title_fr', models.CharField(help_text='A descriptive title helps buyers find your item. <br> State exactly what your post is.', max_length=80, null=True, verbose_name='Title')),
                ('slug', models.SlugField(max_length=255)),
                ('slug_en', models.SlugField(max_length=255, null=True)),
                ('slug_fr', models.SlugField(max_length=255, null=True)),
                ('description', ckeditor.fields.RichTextField(help_text='Describe the your post and provide complete and accurate details. Use a clear and concise format.', verbose_name='Description')),
                ('description_en', ckeditor.fields.RichTextField(help_text='Describe the your post and provide complete and accurate details. Use a clear and concise format.', null=True, verbose_name='Description')),
                ('description_fr', ckeditor.fields.RichTextField(help_text='Describe the your post and provide complete and accurate details. Use a clear and concise format.', null=True, verbose_name='Description')),
                ('datetime_added', models.DateTimeField(auto_now_add=True, verbose_name='Date/time added')),
                ('original_language', models.CharField(choices=[('en', 'English'), ('fr', 'French')], default='fr', help_text='Initial language in which post was entered in.', max_length=3, verbose_name='Initial language')),
                ('condition', models.CharField(choices=[('N', 'New'), ('U', 'Used'), ('D', 'For parts or not working')], default='N', help_text="Select the condition of the item you're listing.", max_length=3)),
                ('condition_description', models.TextField(blank=True, help_text='Provide details about the condition of a non brand-new item, including any defects or flaws, so that buyers know exactly what to expect.', null=True, verbose_name='Condition description')),
                ('condition_description_en', models.TextField(blank=True, help_text='Provide details about the condition of a non brand-new item, including any defects or flaws, so that buyers know exactly what to expect.', null=True, verbose_name='Condition description')),
                ('condition_description_fr', models.TextField(blank=True, help_text='Provide details about the condition of a non brand-new item, including any defects or flaws, so that buyers know exactly what to expect.', null=True, verbose_name='Condition description')),
                ('price', models.PositiveIntegerField(help_text='Figures and spaces only, no commas or dots. <br> Enter <b>0</b> for free products or services.', verbose_name='Price')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='item_listings', related_query_name='item_listing', to='marketplace.itemcategory')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_listings', related_query_name='item_listing', to='marketplace.institution')),
            ],
            options={
                'verbose_name_plural': 'Item Listings',
            },
            bases=(models.Model, hitcount.models.HitCountMixin),
        ),
        migrations.CreateModel(
            name='ItemSubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35, verbose_name='Name')),
                ('name_en', models.CharField(max_length=35, null=True, verbose_name='Name')),
                ('name_fr', models.CharField(max_length=35, null=True, verbose_name='Name')),
                ('parent_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sub_categories', related_query_name='sub_category', to='marketplace.itemcategory')),
            ],
            options={
                'verbose_name_plural': 'Item Subcategories',
            },
        ),
        migrations.CreateModel(
            name='ItemListingPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('file', models.ImageField(upload_to='item_photos/')),
                ('upload_datetime', models.DateTimeField(auto_now_add=True)),
                ('item_listing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', related_query_name='photo', to='marketplace.itemlisting')),
            ],
            options={
                'verbose_name': 'Item Listing Photo',
                'verbose_name_plural': 'Item Listing Photos',
            },
        ),
    ]
